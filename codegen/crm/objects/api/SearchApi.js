/**
 * CRM Objects
 * CRM objects such as companies, contacts, deals, line items, products, tickets, and quotes are native objects in HubSpotâ€™s CRM. These core building blocks support custom properties, store critical information, and play a central role in the HubSpot application.  ## Supported Object Types  This API provides access to collections of CRM objects, which return a map of property names to values. Each object type has its own set of default properties, which can be found by exploring the [CRM Object Properties API](https://developers.hubspot.com/docs/methods/crm-properties/crm-properties-overview).  |Object Type |Properties returned by default | |--|--| | `companies` | `name`, `domain` | | `contacts` | `firstname`, `lastname`, `email` | | `deals` | `dealname`, `amount`, `closedate`, `pipeline`, `dealstage` | | `products` | `name`, `description`, `price` | | `tickets` | `content`, `hs_pipeline`, `hs_pipeline_stage`, `hs_ticket_category`, `hs_ticket_priority`, `subject` |  Find a list of all properties for an object type using the [CRM Object Properties](https://developers.hubspot.com/docs/methods/crm-properties/get-properties) API. e.g. `GET https://api.hubapi.com/properties/v2/companies/properties`. Change the properties returned in the response using the `properties` array in the request body.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CollectionResponseWithTotalSimplePublicObject', 'model/Error', 'model/PublicObjectSearchRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CollectionResponseWithTotalSimplePublicObject'), require('../model/Error'), require('../model/PublicObjectSearchRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.CrmObjects) {
      root.CrmObjects = {};
    }
    root.CrmObjects.SearchApi = factory(root.CrmObjects.ApiClient, root.CrmObjects.CollectionResponseWithTotalSimplePublicObject, root.CrmObjects.Error, root.CrmObjects.PublicObjectSearchRequest);
  }
}(this, function(ApiClient, CollectionResponseWithTotalSimplePublicObject, Error, PublicObjectSearchRequest) {
  'use strict';

  /**
   * Search service.
   * @module api/SearchApi
   * @version v3
   */

  /**
   * Constructs a new SearchApi. 
   * @alias module:api/SearchApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * Filter, Sort, and Search CRM Objects
     * # Filter, Sort, and Search CRM Objects  The CRM Search API is a powerful API that allows developers to filter, sort, and search across all CRM object types, including contacts, deals, companies and tickets. Using this API, developers can more efficiently retrieve a subset of data they are looking for to better suit their business needs.  Common use cases this API allows for include, but are not limited to the following: &lt;ul&gt; &lt;li&gt;Getting a list of contacts for a specific account&lt;/li&gt; &lt;li&gt;Retrieving a list of all open deals&lt;/li&gt; &lt;li&gt;Searching for contacts by custom properties&lt;/li&gt; &lt;li&gt;&amp; more&lt;/li&gt; &lt;/ul&gt;  Prerequisite for using this API: To use the CRM Search API with an OAuth token, your app must request and be granted access to the contacts scope.  &lt;br /&gt; &#x60;engagements&#x60; including &#x60;tasks&#x60;, &#x60;calls&#x60;, &#x60;emails&#x60;, and &#x60;notes&#x60; are not supported.  &lt;br /&gt; ## Filter  Use &#x60;filters&#x60; in the request body to limit results to specific CRM objects.  *Example*: Find all contacts with a first name of \&quot;Alice\&quot; &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;filters\&quot;: [       {         \&quot;propertyName\&quot;: \&quot;firstname\&quot;,         \&quot;operator\&quot;: \&quot;EQ\&quot;,         \&quot;value\&quot;: \&quot;Alice\&quot;       }     ]   }&#39; &#x60;&#x60;&#x60;  When multiple filters are provided, they will be combined using a logical AND operator. The system supports a maximum of three filters.   &lt;br /&gt; ### Operators  Supported operators include &#x60;EQ&#x60;, &#x60;NEQ&#x60;, &#x60;LT&#x60;, &#x60;LTE&#x60;, &#x60;GT&#x60;, &#x60;GTE&#x60;, &#x60;HAS_PROPERTY&#x60;, &#x60;NOT_HAS_PROPERTY&#x60;.  &lt;br /&gt; ### Associations You can find objects associated with a different object type by ID using the &#x60;associations.{objectType}&#x60; psuedo-property. Support for this is limited to &#x60;deals&#x60; and &#x60;tickets&#x60;.  Supported association filters: |Object Type |Filter &#x60;propertyName&#x60; | |--|--| | &#x60;deals&#x60; | &#x60;associations.company&#x60;, &#x60;associations.contact&#x60;, &#x60;associations.ticket&#x60; | | &#x60;tickets&#x60; | &#x60;associations.company&#x60;, &#x60;associations.contact&#x60;, &#x60;associations.deal&#x60; |  *Example*: Find all tickets associated with the contact using ID \&quot;123\&quot; &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/tickets/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;filters\&quot;: [       {         \&quot;propertyName\&quot;: \&quot;associations.contact\&quot;,         \&quot;operator\&quot;: \&quot;EQ\&quot;,         \&quot;value\&quot;: \&quot;123\&quot;       }     ]   }&#39; &#x60;&#x60;&#x60;  &lt;br /&gt; ## Sort  Use &#x60;sorts&#x60;, which contain a property name and a direction, to sort the returned collection.  *Example*: List all contacts with most recently created first &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;sorts\&quot;: [       {         \&quot;propertyName\&quot;: \&quot;createdate\&quot;,         \&quot;direction\&quot;: \&quot;DESCENDING\&quot;       }     ]   }&#39; &#x60;&#x60;&#x60; The system supports a single sort.   &lt;br /&gt; ## Search  Perform a text search against all property values for an object type. By default, the results will be returned in order of object creation (oldest first) but this can be overridden using &#x60;sorts&#x60;.  *Example*: Find all contacts with a property value containing the letter &#x60;x&#x60; &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;query\&quot;: \&quot;x\&quot;   }&#39; &#x60;&#x60;&#x60;  &lt;br /&gt; ## Controlling returned properties  Each object type is returned with a default set of properties. You can override this by providing an array of property names in the &#x60;properties&#x60; property of the request body.  *Example*: Return all contacts and include their email and mailing address state &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;properties\&quot;: [ \&quot;email\&quot;, \&quot;state\&quot; ]   }&#39; &#x60;&#x60;&#x60;  &lt;br /&gt; ## Paging through results By default, the Search API returns results containing 10 objects per page. The system supports a maximum of 100 results per page.  *Example*: Get pages of size 20 &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;limit\&quot;: 20   } &#x60;&#x60;&#x60;  In order to access the next page of results, you must pass the &#x60;after&#x60; parameter that was provided in the previous response in the &#x60;paging.next.after&#x60; property. If no &#x60;paging.next.after&#x60; property is provided, no additional results will be shown. Note that the after parameter is expected to be a string.  *Example*: Get the next page of results &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;after\&quot;: \&quot;20\&quot;   }&#39; &#x60;&#x60;&#x60;  &lt;br /&gt; ## Sample Response (Success)  &#x60;&#x60;&#x60; {   \&quot;results\&quot;: [     {       \&quot;id\&quot;: \&quot;174\&quot;,       \&quot;properties\&quot;: {         \&quot;firstname\&quot;: \&quot;Brantley\&quot;,         \&quot;lastname\&quot;: \&quot;Forrest\&quot;,         \&quot;email\&quot;: \&quot;bforrest8@acme.com\&quot;       },       \&quot;createdAt\&quot;: 1564586892,       \&quot;updatedAt\&quot;: 1564586908,       \&quot;archived\&quot;: false     },     ...   ],   \&quot;paging\&quot;: {     \&quot;next\&quot;: {       \&quot;after\&quot;: \&quot;10\&quot;     }   } } &#x60;&#x60;&#x60;  &lt;br /&gt; ## Limitations  1. It can take a few moments between creating or updating a CRM object in HubSpot and seeing it in CRM Search API results. 2. CRM objects in an archived state will not be available in the Search API. 3. The Search API is rate limited to 1 request per second per authentication token, which is more stringent than our general rate limits. The &#x60;X-HubSpot-RateLimit-*&#x60; headers will not reflect this during the beta period. Read more about [rate limits](https://developers.hubspot.com/docs/faq/working-within-the-hubspot-api-rate-limits).  &lt;br /&gt; ## Error Handling Read our [error documentation](https://developers.hubspot.com/docs/faq/api-error-responses).
     * @param {String} objectType 
     * @param {Object} opts Optional parameters
     * @param {module:model/PublicObjectSearchRequest} opts.body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CollectionResponseWithTotalSimplePublicObject} and HTTP response
     */
    this.doSearchWithHttpInfo = function(objectType, opts) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'objectType' is set
      if (objectType === undefined || objectType === null) {
        throw new Error("Missing the required parameter 'objectType' when calling doSearch");
      }


      var pathParams = {
        'objectType': objectType
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['hapikey', 'oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = CollectionResponseWithTotalSimplePublicObject;

      return this.apiClient.callApi(
        '/{objectType}/search', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Filter, Sort, and Search CRM Objects
     * # Filter, Sort, and Search CRM Objects  The CRM Search API is a powerful API that allows developers to filter, sort, and search across all CRM object types, including contacts, deals, companies and tickets. Using this API, developers can more efficiently retrieve a subset of data they are looking for to better suit their business needs.  Common use cases this API allows for include, but are not limited to the following: &lt;ul&gt; &lt;li&gt;Getting a list of contacts for a specific account&lt;/li&gt; &lt;li&gt;Retrieving a list of all open deals&lt;/li&gt; &lt;li&gt;Searching for contacts by custom properties&lt;/li&gt; &lt;li&gt;&amp; more&lt;/li&gt; &lt;/ul&gt;  Prerequisite for using this API: To use the CRM Search API with an OAuth token, your app must request and be granted access to the contacts scope.  &lt;br /&gt; &#x60;engagements&#x60; including &#x60;tasks&#x60;, &#x60;calls&#x60;, &#x60;emails&#x60;, and &#x60;notes&#x60; are not supported.  &lt;br /&gt; ## Filter  Use &#x60;filters&#x60; in the request body to limit results to specific CRM objects.  *Example*: Find all contacts with a first name of \&quot;Alice\&quot; &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;filters\&quot;: [       {         \&quot;propertyName\&quot;: \&quot;firstname\&quot;,         \&quot;operator\&quot;: \&quot;EQ\&quot;,         \&quot;value\&quot;: \&quot;Alice\&quot;       }     ]   }&#39; &#x60;&#x60;&#x60;  When multiple filters are provided, they will be combined using a logical AND operator. The system supports a maximum of three filters.   &lt;br /&gt; ### Operators  Supported operators include &#x60;EQ&#x60;, &#x60;NEQ&#x60;, &#x60;LT&#x60;, &#x60;LTE&#x60;, &#x60;GT&#x60;, &#x60;GTE&#x60;, &#x60;HAS_PROPERTY&#x60;, &#x60;NOT_HAS_PROPERTY&#x60;.  &lt;br /&gt; ### Associations You can find objects associated with a different object type by ID using the &#x60;associations.{objectType}&#x60; psuedo-property. Support for this is limited to &#x60;deals&#x60; and &#x60;tickets&#x60;.  Supported association filters: |Object Type |Filter &#x60;propertyName&#x60; | |--|--| | &#x60;deals&#x60; | &#x60;associations.company&#x60;, &#x60;associations.contact&#x60;, &#x60;associations.ticket&#x60; | | &#x60;tickets&#x60; | &#x60;associations.company&#x60;, &#x60;associations.contact&#x60;, &#x60;associations.deal&#x60; |  *Example*: Find all tickets associated with the contact using ID \&quot;123\&quot; &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/tickets/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;filters\&quot;: [       {         \&quot;propertyName\&quot;: \&quot;associations.contact\&quot;,         \&quot;operator\&quot;: \&quot;EQ\&quot;,         \&quot;value\&quot;: \&quot;123\&quot;       }     ]   }&#39; &#x60;&#x60;&#x60;  &lt;br /&gt; ## Sort  Use &#x60;sorts&#x60;, which contain a property name and a direction, to sort the returned collection.  *Example*: List all contacts with most recently created first &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;sorts\&quot;: [       {         \&quot;propertyName\&quot;: \&quot;createdate\&quot;,         \&quot;direction\&quot;: \&quot;DESCENDING\&quot;       }     ]   }&#39; &#x60;&#x60;&#x60; The system supports a single sort.   &lt;br /&gt; ## Search  Perform a text search against all property values for an object type. By default, the results will be returned in order of object creation (oldest first) but this can be overridden using &#x60;sorts&#x60;.  *Example*: Find all contacts with a property value containing the letter &#x60;x&#x60; &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;query\&quot;: \&quot;x\&quot;   }&#39; &#x60;&#x60;&#x60;  &lt;br /&gt; ## Controlling returned properties  Each object type is returned with a default set of properties. You can override this by providing an array of property names in the &#x60;properties&#x60; property of the request body.  *Example*: Return all contacts and include their email and mailing address state &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;properties\&quot;: [ \&quot;email\&quot;, \&quot;state\&quot; ]   }&#39; &#x60;&#x60;&#x60;  &lt;br /&gt; ## Paging through results By default, the Search API returns results containing 10 objects per page. The system supports a maximum of 100 results per page.  *Example*: Get pages of size 20 &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;limit\&quot;: 20   } &#x60;&#x60;&#x60;  In order to access the next page of results, you must pass the &#x60;after&#x60; parameter that was provided in the previous response in the &#x60;paging.next.after&#x60; property. If no &#x60;paging.next.after&#x60; property is provided, no additional results will be shown. Note that the after parameter is expected to be a string.  *Example*: Get the next page of results &#x60;&#x60;&#x60; curl --request POST https://api.hubapi.com/crm/v3/objects/contacts/search?hapikey&#x3D;demo \\   --header \&quot;Content-Type: application/json\&quot; \\   --data &#39;{     \&quot;after\&quot;: \&quot;20\&quot;   }&#39; &#x60;&#x60;&#x60;  &lt;br /&gt; ## Sample Response (Success)  &#x60;&#x60;&#x60; {   \&quot;results\&quot;: [     {       \&quot;id\&quot;: \&quot;174\&quot;,       \&quot;properties\&quot;: {         \&quot;firstname\&quot;: \&quot;Brantley\&quot;,         \&quot;lastname\&quot;: \&quot;Forrest\&quot;,         \&quot;email\&quot;: \&quot;bforrest8@acme.com\&quot;       },       \&quot;createdAt\&quot;: 1564586892,       \&quot;updatedAt\&quot;: 1564586908,       \&quot;archived\&quot;: false     },     ...   ],   \&quot;paging\&quot;: {     \&quot;next\&quot;: {       \&quot;after\&quot;: \&quot;10\&quot;     }   } } &#x60;&#x60;&#x60;  &lt;br /&gt; ## Limitations  1. It can take a few moments between creating or updating a CRM object in HubSpot and seeing it in CRM Search API results. 2. CRM objects in an archived state will not be available in the Search API. 3. The Search API is rate limited to 1 request per second per authentication token, which is more stringent than our general rate limits. The &#x60;X-HubSpot-RateLimit-*&#x60; headers will not reflect this during the beta period. Read more about [rate limits](https://developers.hubspot.com/docs/faq/working-within-the-hubspot-api-rate-limits).  &lt;br /&gt; ## Error Handling Read our [error documentation](https://developers.hubspot.com/docs/faq/api-error-responses).
     * @param {String} objectType 
     * @param {Object} opts Optional parameters
     * @param {module:model/PublicObjectSearchRequest} opts.body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CollectionResponseWithTotalSimplePublicObject}
     */
    this.doSearch = function(objectType, opts) {
      return this.doSearchWithHttpInfo(objectType, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
