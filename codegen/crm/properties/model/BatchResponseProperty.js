/**
 * Properties
 * All HubSpot objects store data in default and custom properties. These endpoints provide access to read and modify object properties in HubSpot.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Error', 'model/Property'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Error'), require('./Property'));
  } else {
    // Browser globals (root is window)
    if (!root.Properties) {
      root.Properties = {};
    }
    root.Properties.BatchResponseProperty = factory(root.Properties.ApiClient, root.Properties.Error, root.Properties.Property);
  }
}(this, function(ApiClient, Error, Property) {
  'use strict';



  /**
   * The BatchResponseProperty model module.
   * @module model/BatchResponseProperty
   * @version v3
   */

  /**
   * Constructs a new <code>BatchResponseProperty</code>.
   * @alias module:model/BatchResponseProperty
   * @class
   * @param results {Array.<module:model/Property>} 
   * @param errors {Array.<module:model/Error>} 
   * @param status {module:model/BatchResponseProperty.StatusEnum} 
   * @param startedAt {Date} 
   * @param completedAt {Date} 
   */
  var exports = function(results, errors, status, startedAt, completedAt) {
    var _this = this;

    _this['results'] = results;
    _this['errors'] = errors;
    _this['status'] = status;
    _this['startedAt'] = startedAt;
    _this['completedAt'] = completedAt;
  };

  /**
   * Constructs a <code>BatchResponseProperty</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BatchResponseProperty} obj Optional instance to populate.
   * @return {module:model/BatchResponseProperty} The populated <code>BatchResponseProperty</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('results')) {
        obj['results'] = ApiClient.convertToType(data['results'], [Property]);
      }
      if (data.hasOwnProperty('numErrors')) {
        obj['numErrors'] = ApiClient.convertToType(data['numErrors'], 'Number');
      }
      if (data.hasOwnProperty('errors')) {
        obj['errors'] = ApiClient.convertToType(data['errors'], [Error]);
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('requestedAt')) {
        obj['requestedAt'] = ApiClient.convertToType(data['requestedAt'], 'Date');
      }
      if (data.hasOwnProperty('startedAt')) {
        obj['startedAt'] = ApiClient.convertToType(data['startedAt'], 'Date');
      }
      if (data.hasOwnProperty('completedAt')) {
        obj['completedAt'] = ApiClient.convertToType(data['completedAt'], 'Date');
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/Property>} results
   */
  exports.prototype['results'] = undefined;
  /**
   * @member {Number} numErrors
   */
  exports.prototype['numErrors'] = undefined;
  /**
   * @member {Array.<module:model/Error>} errors
   */
  exports.prototype['errors'] = undefined;
  /**
   * @member {module:model/BatchResponseProperty.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {Date} requestedAt
   */
  exports.prototype['requestedAt'] = undefined;
  /**
   * @member {Date} startedAt
   */
  exports.prototype['startedAt'] = undefined;
  /**
   * @member {Date} completedAt
   */
  exports.prototype['completedAt'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",
    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",
    /**
     * value: "CANCELED"
     * @const
     */
    "CANCELED": "CANCELED",
    /**
     * value: "COMPLETE"
     * @const
     */
    "COMPLETE": "COMPLETE"  };


  return exports;
}));


