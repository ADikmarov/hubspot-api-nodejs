/**
 * Properties
 * All HubSpot objects store data in default and custom properties. These endpoints provide access to read and modify object properties in HubSpot.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PropertyName'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PropertyName'));
  } else {
    // Browser globals (root is window)
    if (!root.Properties) {
      root.Properties = {};
    }
    root.Properties.BatchInputPropertyName = factory(root.Properties.ApiClient, root.Properties.PropertyName);
  }
}(this, function(ApiClient, PropertyName) {
  'use strict';



  /**
   * The BatchInputPropertyName model module.
   * @module model/BatchInputPropertyName
   * @version v3
   */

  /**
   * Constructs a new <code>BatchInputPropertyName</code>.
   * @alias module:model/BatchInputPropertyName
   * @class
   * @param inputs {Array.<module:model/PropertyName>} 
   */
  var exports = function(inputs) {
    var _this = this;

    _this['inputs'] = inputs;
  };

  /**
   * Constructs a <code>BatchInputPropertyName</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BatchInputPropertyName} obj Optional instance to populate.
   * @return {module:model/BatchInputPropertyName} The populated <code>BatchInputPropertyName</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('inputs')) {
        obj['inputs'] = ApiClient.convertToType(data['inputs'], [PropertyName]);
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/PropertyName>} inputs
   */
  exports.prototype['inputs'] = undefined;



  return exports;
}));


