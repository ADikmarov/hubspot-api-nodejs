/**
 * Properties
 * All HubSpot objects store data in default and custom properties. These endpoints provide access to read and modify object properties in HubSpot.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BatchInputPropertyCreate', 'model/BatchInputPropertyName', 'model/BatchReadInputPropertyName', 'model/BatchResponseProperty', 'model/CollectionResponseProperty', 'model/Error', 'model/ErrorDetail', 'model/NextPage', 'model/Option', 'model/OptionInput', 'model/Paging', 'model/Property', 'model/PropertyCreate', 'model/PropertyMutability', 'model/PropertyName', 'model/PropertyUpdate', 'api/BatchApi', 'api/CoreApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/BatchInputPropertyCreate'), require('./model/BatchInputPropertyName'), require('./model/BatchReadInputPropertyName'), require('./model/BatchResponseProperty'), require('./model/CollectionResponseProperty'), require('./model/Error'), require('./model/ErrorDetail'), require('./model/NextPage'), require('./model/Option'), require('./model/OptionInput'), require('./model/Paging'), require('./model/Property'), require('./model/PropertyCreate'), require('./model/PropertyMutability'), require('./model/PropertyName'), require('./model/PropertyUpdate'), require('./api/BatchApi'), require('./api/CoreApi'));
  }
}(function(ApiClient, BatchInputPropertyCreate, BatchInputPropertyName, BatchReadInputPropertyName, BatchResponseProperty, CollectionResponseProperty, Error, ErrorDetail, NextPage, Option, OptionInput, Paging, Property, PropertyCreate, PropertyMutability, PropertyName, PropertyUpdate, BatchApi, CoreApi) {
  'use strict';

  /**
   * All_HubSpot_objects_store_data_in_default_and_custom_properties__These_endpoints_provide_access_to_read_and_modify_object_properties_in_HubSpot_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Properties = require('index'); // See note below*.
   * var xxxSvc = new Properties.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Properties.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Properties.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Properties.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v3
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The BatchInputPropertyCreate model constructor.
     * @property {module:model/BatchInputPropertyCreate}
     */
    BatchInputPropertyCreate: BatchInputPropertyCreate,
    /**
     * The BatchInputPropertyName model constructor.
     * @property {module:model/BatchInputPropertyName}
     */
    BatchInputPropertyName: BatchInputPropertyName,
    /**
     * The BatchReadInputPropertyName model constructor.
     * @property {module:model/BatchReadInputPropertyName}
     */
    BatchReadInputPropertyName: BatchReadInputPropertyName,
    /**
     * The BatchResponseProperty model constructor.
     * @property {module:model/BatchResponseProperty}
     */
    BatchResponseProperty: BatchResponseProperty,
    /**
     * The CollectionResponseProperty model constructor.
     * @property {module:model/CollectionResponseProperty}
     */
    CollectionResponseProperty: CollectionResponseProperty,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail: ErrorDetail,
    /**
     * The NextPage model constructor.
     * @property {module:model/NextPage}
     */
    NextPage: NextPage,
    /**
     * The Option model constructor.
     * @property {module:model/Option}
     */
    Option: Option,
    /**
     * The OptionInput model constructor.
     * @property {module:model/OptionInput}
     */
    OptionInput: OptionInput,
    /**
     * The Paging model constructor.
     * @property {module:model/Paging}
     */
    Paging: Paging,
    /**
     * The Property model constructor.
     * @property {module:model/Property}
     */
    Property: Property,
    /**
     * The PropertyCreate model constructor.
     * @property {module:model/PropertyCreate}
     */
    PropertyCreate: PropertyCreate,
    /**
     * The PropertyMutability model constructor.
     * @property {module:model/PropertyMutability}
     */
    PropertyMutability: PropertyMutability,
    /**
     * The PropertyName model constructor.
     * @property {module:model/PropertyName}
     */
    PropertyName: PropertyName,
    /**
     * The PropertyUpdate model constructor.
     * @property {module:model/PropertyUpdate}
     */
    PropertyUpdate: PropertyUpdate,
    /**
     * The BatchApi service constructor.
     * @property {module:api/BatchApi}
     */
    BatchApi: BatchApi,
    /**
     * The CoreApi service constructor.
     * @property {module:api/CoreApi}
     */
    CoreApi: CoreApi
  };

  return exports;
}));
