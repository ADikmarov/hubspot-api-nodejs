/**
 * Custom Workflow Actions
 * Create custom workflow actions
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { Option } from './option';

/**
* The data type expected by an input field.
*/
export class FieldTypeDefinition {
    /**
    * The input field name.
    */
    'name': string;
    /**
    * The data type of the field.
    */
    'type': FieldTypeDefinition.TypeEnum;
    /**
    * Controls how the field appears in HubSpot.
    */
    'fieldType'?: FieldTypeDefinition.FieldTypeEnum;
    /**
    * A list of valid options for the field value.
    */
    'options': Array<Option>;
    /**
    * A URL that will accept HTTPS requests when the valid options for the field are fetched.
    */
    'optionsUrl'?: string;
    /**
    * This can be set to `OWNER` if the field should contain a HubSpot owner value.
    */
    'referencedObjectType'?: FieldTypeDefinition.ReferencedObjectTypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "FieldTypeDefinition.TypeEnum"
        },
        {
            "name": "fieldType",
            "baseName": "fieldType",
            "type": "FieldTypeDefinition.FieldTypeEnum"
        },
        {
            "name": "options",
            "baseName": "options",
            "type": "Array<Option>"
        },
        {
            "name": "optionsUrl",
            "baseName": "optionsUrl",
            "type": "string"
        },
        {
            "name": "referencedObjectType",
            "baseName": "referencedObjectType",
            "type": "FieldTypeDefinition.ReferencedObjectTypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return FieldTypeDefinition.attributeTypeMap;
    }
}

export namespace FieldTypeDefinition {
    export enum TypeEnum {
        String = <any> 'string',
        Number = <any> 'number',
        Bool = <any> 'bool',
        Datetime = <any> 'datetime',
        Enumeration = <any> 'enumeration',
        Date = <any> 'date',
        PhoneNumber = <any> 'phone_number',
        CurrencyNumber = <any> 'currency_number',
        Json = <any> 'json',
        ObjectCoordinates = <any> 'object_coordinates'
    }
    export enum FieldTypeEnum {
        Booleancheckbox = <any> 'booleancheckbox',
        Checkbox = <any> 'checkbox',
        Date = <any> 'date',
        File = <any> 'file',
        Number = <any> 'number',
        Phonenumber = <any> 'phonenumber',
        Radio = <any> 'radio',
        Select = <any> 'select',
        Text = <any> 'text',
        Textarea = <any> 'textarea',
        CalculationEquation = <any> 'calculation_equation',
        CalculationRollup = <any> 'calculation_rollup',
        CalculationScore = <any> 'calculation_score',
        CalculationReadTime = <any> 'calculation_read_time',
        Unknown = <any> 'unknown'
    }
    export enum ReferencedObjectTypeEnum {
        CONTACT = <any> 'CONTACT',
        COMPANY = <any> 'COMPANY',
        DEAL = <any> 'DEAL',
        ENGAGEMENT = <any> 'ENGAGEMENT',
        TICKET = <any> 'TICKET',
        OWNER = <any> 'OWNER',
        PRODUCT = <any> 'PRODUCT',
        LINEITEM = <any> 'LINE_ITEM',
        BETDELIVERABLESERVICE = <any> 'BET_DELIVERABLE_SERVICE',
        CONTENT = <any> 'CONTENT',
        CONVERSATION = <any> 'CONVERSATION',
        BETALERT = <any> 'BET_ALERT',
        PORTAL = <any> 'PORTAL',
        QUOTE = <any> 'QUOTE',
        FORMSUBMISSIONINBOUNDDB = <any> 'FORM_SUBMISSION_INBOUNDDB',
        QUOTA = <any> 'QUOTA',
        UNSUBSCRIBE = <any> 'UNSUBSCRIBE',
        COMMUNICATION = <any> 'COMMUNICATION',
        FEEDBACKSUBMISSION = <any> 'FEEDBACK_SUBMISSION',
        ATTRIBUTION = <any> 'ATTRIBUTION',
        SALESFORCESYNCERROR = <any> 'SALESFORCE_SYNC_ERROR',
        RESTORABLECRMOBJECT = <any> 'RESTORABLE_CRM_OBJECT',
        HUB = <any> 'HUB',
        LANDINGPAGE = <any> 'LANDING_PAGE',
        PRODUCTORFOLDER = <any> 'PRODUCT_OR_FOLDER',
        TASK = <any> 'TASK',
        FORM = <any> 'FORM',
        MARKETINGEMAIL = <any> 'MARKETING_EMAIL',
        ADACCOUNT = <any> 'AD_ACCOUNT',
        ADCAMPAIGN = <any> 'AD_CAMPAIGN',
        ADGROUP = <any> 'AD_GROUP',
        AD = <any> 'AD',
        KEYWORD = <any> 'KEYWORD',
        CAMPAIGN = <any> 'CAMPAIGN',
        SOCIALCHANNEL = <any> 'SOCIAL_CHANNEL',
        SOCIALPOST = <any> 'SOCIAL_POST',
        SITEPAGE = <any> 'SITE_PAGE',
        BLOGPOST = <any> 'BLOG_POST',
        IMPORT = <any> 'IMPORT',
        EXPORT = <any> 'EXPORT',
        CTA = <any> 'CTA',
        TASKTEMPLATE = <any> 'TASK_TEMPLATE',
        AUTOMATIONPLATFORMFLOW = <any> 'AUTOMATION_PLATFORM_FLOW',
        OBJECTLIST = <any> 'OBJECT_LIST',
        NOTE = <any> 'NOTE',
        MEETINGEVENT = <any> 'MEETING_EVENT',
        CALL = <any> 'CALL',
        EMAIL = <any> 'EMAIL',
        PUBLISHINGTASK = <any> 'PUBLISHING_TASK',
        CONVERSATIONSESSION = <any> 'CONVERSATION_SESSION',
        CONTACTCREATEATTRIBUTION = <any> 'CONTACT_CREATE_ATTRIBUTION',
        INVOICE = <any> 'INVOICE',
        MARKETINGEVENT = <any> 'MARKETING_EVENT',
        CONVERSATIONINBOX = <any> 'CONVERSATION_INBOX',
        CHATFLOW = <any> 'CHATFLOW',
        MEDIABRIDGE = <any> 'MEDIA_BRIDGE',
        SEQUENCE = <any> 'SEQUENCE',
        SEQUENCESTEP = <any> 'SEQUENCE_STEP',
        FORECAST = <any> 'FORECAST',
        SNIPPET = <any> 'SNIPPET',
        TEMPLATE = <any> 'TEMPLATE',
        UNKNOWN = <any> 'UNKNOWN'
    }
}
