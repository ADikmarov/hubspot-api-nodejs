/**
 * URL redirects
 * URL redirect operations
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class UrlMapping {
    /**
    * The unique ID of this URL redirect.
    */
    'id': number;
    'portalId': number;
    'created': number;
    'updated': number;
    'createdById': number;
    'updatedById': number;
    /**
    * The target incoming URL, path, or pattern to match for redirection.
    */
    'routePrefix': string;
    /**
    * The destination URL, where the target URL should be redirected if it matches the `routePrefix`.
    */
    'destination': string;
    /**
    * The type of redirect to create. Options include: 301 (permanent), 302 (temporary), or 305 (proxy). Find more details [here](https://knowledge.hubspot.com/cos-general/how-to-redirect-a-hubspot-page).
    */
    'redirectStyle': number;
    'contentGroupId': number;
    /**
    * Whether the URL redirect mapping should apply only if a live page on the URL isn't found. If False, the URL redirect mapping will take precedence over any existing page.
    */
    'isOnlyAfterNotFound': boolean;
    'isRegex': boolean;
    /**
    * Whether the `routePrefix` should match on the entire URL, including the domain.
    */
    'isMatchFullUrl': boolean;
    /**
    * Whether the `routePrefix` should match on the entire URL path, including the query string.
    */
    'isMatchQueryString': boolean;
    /**
    * Whether the `routePrefix` should match based on pattern.
    */
    'isPattern': boolean;
    /**
    * Whether a trailing slash will be ignored.
    */
    'isTrailingSlashOptional': boolean;
    /**
    * Whether the `routePrefix` should match both HTTP and HTTPS protocols.
    */
    'isProtocolAgnostic': boolean;
    'name': string;
    /**
    * Used to prioritize URL redirection. If a given URL matches more than one redirect, the one with the **lower** precedence will be used.
    */
    'precedence': number;
    'deletedAt': number;
    'note': string;
    'label': string;
    'internallyCreated': boolean;
    'cosObjectType': UrlMappingCosObjectTypeEnum;
    'cdnPurgeEmbargoTime': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "portalId",
            "baseName": "portalId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "createdById",
            "baseName": "createdById",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "updatedById",
            "baseName": "updatedById",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "routePrefix",
            "baseName": "routePrefix",
            "type": "string",
            "format": ""
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "string",
            "format": ""
        },
        {
            "name": "redirectStyle",
            "baseName": "redirectStyle",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "contentGroupId",
            "baseName": "contentGroupId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "isOnlyAfterNotFound",
            "baseName": "isOnlyAfterNotFound",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isRegex",
            "baseName": "isRegex",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isMatchFullUrl",
            "baseName": "isMatchFullUrl",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isMatchQueryString",
            "baseName": "isMatchQueryString",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isPattern",
            "baseName": "isPattern",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isTrailingSlashOptional",
            "baseName": "isTrailingSlashOptional",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isProtocolAgnostic",
            "baseName": "isProtocolAgnostic",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "precedence",
            "baseName": "precedence",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "deletedAt",
            "baseName": "deletedAt",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "note",
            "baseName": "note",
            "type": "string",
            "format": ""
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string",
            "format": ""
        },
        {
            "name": "internallyCreated",
            "baseName": "internallyCreated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "cosObjectType",
            "baseName": "cosObjectType",
            "type": "UrlMappingCosObjectTypeEnum",
            "format": ""
        },
        {
            "name": "cdnPurgeEmbargoTime",
            "baseName": "cdnPurgeEmbargoTime",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return UrlMapping.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type UrlMappingCosObjectTypeEnum = "CONTENT" | "EXTENSION_RESOURCE" | "LAYOUT" | "CUSTOM_WIDGET" | "WIDGET" | "FORM" | "PLACEMENT" | "IMAGE" | "DOMAIN_SETTINGS" | "SITE_SETTINGS" | "EMAIL_ADDRESS" | "WORKFLOW" | "HUBDB_TABLE" | "REDIRECT_URL" | "DESIGN_FOLDER" | "SITE_MAP" | "DOMAIN" | "BLOG" | "FILE" | "FOLDER" | "SITE_MENU" | "THEME" | "CONTENT_GROUP" | "FOLLOW_ME" | "KNOWLEDGE_BASE" | "LIST_MEMBERSHIP" | "CONTACT_MEMBERSHIP" | "PASSWORD_PROTECTED" | "UNRESTRICTED_ACCESS" | "MARKETPLACE_LISTING" | "LAYOUT_SECTION" | "THEME_SETTINGS" | "VIDEO_PLAYER" | "URL_MAPPING" | "KNOWLEDGE_CATEGORY" | "KNOWLEDGE_HOMEPAGE_CATEGORY" | "RAW_ASSET" | "GLOBAL_CONTENT" | "HUBDB_TABLE_ROW" | "BLOG_AUTHOR" | "SERVERLESS_FUNCTION" | "KNOWLEDGE_CATEGORY_TRANSLATION" ;

