/**
 * Transactional Email
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { EventIdView } from './eventIdView';

/**
* Describes the status of an email send request.
*/
export class EmailSendStatusView {
    'eventId'?: EventIdView;
    /**
    * Identifier used to query the status of the send.
    */
    'statusId': string;
    /**
    * Result of the send.
    */
    'sendResult'?: EmailSendStatusView.SendResultEnum;
    /**
    * Time when the send was requested.
    */
    'requestedAt'?: Date;
    /**
    * Time when the send began processing.
    */
    'startedAt'?: Date;
    /**
    * Time when the send was completed.
    */
    'completedAt'?: Date;
    /**
    * Status of the send request.
    */
    'status': EmailSendStatusView.StatusEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "eventId",
            "baseName": "eventId",
            "type": "EventIdView"
        },
        {
            "name": "statusId",
            "baseName": "statusId",
            "type": "string"
        },
        {
            "name": "sendResult",
            "baseName": "sendResult",
            "type": "EmailSendStatusView.SendResultEnum"
        },
        {
            "name": "requestedAt",
            "baseName": "requestedAt",
            "type": "Date"
        },
        {
            "name": "startedAt",
            "baseName": "startedAt",
            "type": "Date"
        },
        {
            "name": "completedAt",
            "baseName": "completedAt",
            "type": "Date"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "EmailSendStatusView.StatusEnum"
        }    ];

    static getAttributeTypeMap() {
        return EmailSendStatusView.attributeTypeMap;
    }
}

export namespace EmailSendStatusView {
    export enum SendResultEnum {
        SENT = <any> 'SENT',
        IDEMPOTENTIGNORE = <any> 'IDEMPOTENT_IGNORE',
        QUEUED = <any> 'QUEUED',
        IDEMPOTENTFAIL = <any> 'IDEMPOTENT_FAIL',
        THROTTLED = <any> 'THROTTLED',
        EMAILDISABLED = <any> 'EMAIL_DISABLED',
        PORTALSUSPENDED = <any> 'PORTAL_SUSPENDED',
        INVALIDTOADDRESS = <any> 'INVALID_TO_ADDRESS',
        BLOCKEDDOMAIN = <any> 'BLOCKED_DOMAIN',
        PREVIOUSLYBOUNCED = <any> 'PREVIOUSLY_BOUNCED',
        EMAILUNCONFIRMED = <any> 'EMAIL_UNCONFIRMED',
        PREVIOUSSPAM = <any> 'PREVIOUS_SPAM',
        PREVIOUSLYUNSUBSCRIBEDMESSAGE = <any> 'PREVIOUSLY_UNSUBSCRIBED_MESSAGE',
        PREVIOUSLYUNSUBSCRIBEDPORTAL = <any> 'PREVIOUSLY_UNSUBSCRIBED_PORTAL',
        INVALIDFROMADDRESS = <any> 'INVALID_FROM_ADDRESS',
        CAMPAIGNCANCELLED = <any> 'CAMPAIGN_CANCELLED',
        VALIDATIONFAILED = <any> 'VALIDATION_FAILED',
        MTAIGNORE = <any> 'MTA_IGNORE',
        BLOCKEDADDRESS = <any> 'BLOCKED_ADDRESS',
        PORTALOVERLIMIT = <any> 'PORTAL_OVER_LIMIT',
        PORTALEXPIRED = <any> 'PORTAL_EXPIRED',
        PORTALMISSINGMARKETINGSCOPE = <any> 'PORTAL_MISSING_MARKETING_SCOPE',
        MISSINGTEMPLATEPROPERTIES = <any> 'MISSING_TEMPLATE_PROPERTIES',
        MISSINGREQUIREDPARAMETER = <any> 'MISSING_REQUIRED_PARAMETER',
        PORTALAUTHENTICATIONFAILURE = <any> 'PORTAL_AUTHENTICATION_FAILURE',
        MISSINGCONTENT = <any> 'MISSING_CONTENT',
        CORRUPTINPUT = <any> 'CORRUPT_INPUT',
        TEMPLATERENDEREXCEPTION = <any> 'TEMPLATE_RENDER_EXCEPTION',
        GRAYMAILSUPPRESSED = <any> 'GRAYMAIL_SUPPRESSED',
        UNCONFIGUREDSENDINGDOMAIN = <any> 'UNCONFIGURED_SENDING_DOMAIN',
        UNDELIVERABLE = <any> 'UNDELIVERABLE',
        CANCELLEDABUSE = <any> 'CANCELLED_ABUSE',
        QUARANTINEDADDRESS = <any> 'QUARANTINED_ADDRESS',
        ADDRESSONLYACCEPTEDONPROD = <any> 'ADDRESS_ONLY_ACCEPTED_ON_PROD',
        PORTALNOTAUTHORIZEDFORAPPLICATION = <any> 'PORTAL_NOT_AUTHORIZED_FOR_APPLICATION',
        ADDRESSLISTBOMBED = <any> 'ADDRESS_LIST_BOMBED',
        ADDRESSOPTEDOUT = <any> 'ADDRESS_OPTED_OUT',
        RECIPIENTFATIGUESUPPRESSED = <any> 'RECIPIENT_FATIGUE_SUPPRESSED',
        TOOMANYRECIPIENTS = <any> 'TOO_MANY_RECIPIENTS',
        PREVIOUSLYUNSUBSCRIBEDBRAND = <any> 'PREVIOUSLY_UNSUBSCRIBED_BRAND',
        NONMARKETABLECONTACT = <any> 'NON_MARKETABLE_CONTACT'
    }
    export enum StatusEnum {
        PENDING = <any> 'PENDING',
        PROCESSING = <any> 'PROCESSING',
        CANCELED = <any> 'CANCELED',
        COMPLETE = <any> 'COMPLETE'
    }
}
